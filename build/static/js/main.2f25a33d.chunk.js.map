{"version":3,"sources":["Components/Container/Container.jsx","Components/Section/Section.jsx","Components/PhoneBookListItem/PhoneBookListItem.jsx","Components/PhoneBookList/PhoneBookList.jsx","Components/PhoneBookEditor/PhoneBookEditor.jsx","Components/Filter/Filter.jsx","helpers/filtersContacts.js","App.js","index.js","Components/Container/Container.module.css","Components/Section/Section.module.css"],"names":["Container","children","className","css","container","Section","title","section","toLowerCase","PhoneBookListItem","id","name","number","onDeleteContact","onClick","PhoneBookList","contacts","map","PhoneBookEditor","handleAddNewContact","handleChangeInput","onSubmit","type","value","pattern","required","style","display","marginBottom","onChange","Filter","filterValue","placeholder","filterContacts","filter","obj","includes","trim","App","state","InitialContacts","e","setState","target","preventDefault","some","el","alert","contact","nanoid","prevState","handleChangeFilter","contactsFromLocalStorage","localStorage","getItem","parsedContactsFromLocalStorage","JSON","parse","console","log","this","prevProps","setItem","stringify","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2f25a33d.chunk.js","sourcesContent":["import css from \"./Container.module.css\";\nfunction Container({ children }) {\n  return <div className={css.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from \"prop-types\";\nimport css from \"./Section.module.css\";\nfunction Section({ title, children }) {\n  return (\n    <section className={css.section}>\n      {title.toLowerCase() === \"phonebook\" ? (\n        <h1>{title}</h1>\n      ) : (\n        <h2>{title}</h2>\n      )}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nfunction PhoneBookListItem({ id, name, number, onDeleteContact }) {\n  return (\n    <li key={id}>\n      <div>\n        <p className=\"ContactName\">Name: {name}</p>\n        <p>Number: {number}</p>\n      </div>\n      <button onClick={onDeleteContact} id={id}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nPhoneBookListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default PhoneBookListItem;\n","import PhoneBookListItem from \"../PhoneBookListItem/PhoneBookListItem\";\nfunction PhoneBookList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <PhoneBookListItem\n            key={id}\n            name={name}\n            number={number}\n            id={id}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default PhoneBookList;\n","import PropTypes from \"prop-types\";\nfunction PhoneBookEditor({\n  handleAddNewContact,\n  handleChangeInput,\n  name,\n  number,\n}) {\n  return (\n    <div>\n      <form onSubmit={handleAddNewContact}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            style={{\n              display: \"block\",\n              marginBottom: \"10px\",\n            }}\n            onChange={handleChangeInput}\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            style={{\n              display: \"block\",\n              marginBottom: \"10px\",\n            }}\n            onChange={handleChangeInput}\n          />\n        </label>\n\n        <button type=\"submit\">Add Contact</button>\n      </form>\n    </div>\n  );\n}\n\nPhoneBookEditor.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleChangeInput: PropTypes.func.isRequired,\n  handleAddNewContact: PropTypes.func.isRequired,\n};\n\nexport default PhoneBookEditor;\n","import PropTypes from \"prop-types\";\nfunction Filter({ onChange, filterValue }) {\n  return (\n    <label>\n      Find Contact\n      <input\n        type=\"text\"\n        onChange={onChange}\n        name=\"filter\"\n        value={filterValue}\n        title=\"Введіть, будь ласка, ім'я, або прізвище людини, яку шукаєте\"\n        placeholder=\"Name\"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  filterValue: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","function filterContacts(contacts, filter) {\n  return contacts.filter((obj) => {\n    return obj.name.toLowerCase().includes(filter.toLowerCase().trim());\n  });\n}\n\nexport default filterContacts;\n","import { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport Container from \"./Components/Container/\";\nimport Section from \"./Components/Section\";\nimport PhoneBookList from \"./Components/PhoneBookList\";\nimport PhoneBookEditor from \"./Components/PhoneBookEditor\";\nimport Filter from \"./Components/Filter\";\nimport filterContacts from \"./helpers/filtersContacts\";\nimport InitialContacts from \"./data/InitialContacts.json\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: InitialContacts,\n    name: \"\",\n    number: \"\",\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    // console.log(\"componentDidMount\");\n    const contactsFromLocalStorage = localStorage.getItem(\"contacts\");\n    // console.log(contactsFromLocalStorage);\n    const parsedContactsFromLocalStorage = JSON.parse(contactsFromLocalStorage);\n    console.log(parsedContactsFromLocalStorage);\n    if (parsedContactsFromLocalStorage) {\n      this.setState({ contacts: parsedContactsFromLocalStorage });\n    }\n    // const contacts =\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"componentDidUpdate\");\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(\"Обновилося поле contacts\");\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleChangeInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleAddNewContact = (e) => {\n    e.preventDefault();\n\n    const { contacts, name, number } = this.state;\n    if (contacts.some((el) => el.name === name)) {\n      alert(`${name} has alredy be declared`);\n      return;\n    }\n\n    let contact = {\n      name: name,\n      number: number,\n      id: nanoid(),\n    };\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contact],\n      name: \"\",\n      number: \"\",\n    }));\n  };\n\n  onDeleteContact = (e) => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: contacts.filter((el) => el.id !== e.target.id),\n    });\n  };\n\n  handleChangeFilter = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    const contacts = filterContacts(this.state.contacts, this.state.filter);\n    const { name, number, filter } = this.state;\n    return (\n      <div className=\"App\">\n        <Container>\n          <Section title={\"Phonebook\"}>\n            <Section title={\"Add new contact\"}>\n              <PhoneBookEditor\n                name={name}\n                number={number}\n                handleAddNewContact={this.handleAddNewContact}\n                handleChangeInput={this.handleChangeInput}\n              />\n            </Section>\n            <Section title={\"Contacts\"}>\n              <Filter onChange={this.handleChangeFilter} filterValue={filter} />\n              <PhoneBookList\n                contacts={contacts}\n                onDeleteContact={this.onDeleteContact}\n              />\n            </Section>\n          </Section>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3e1Mh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__snUHO\"};"],"sourceRoot":""}